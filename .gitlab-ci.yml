---
stages:
  - test
  - build
  - deploy_staging
  - deploy_production

variables:
  HEALTH_TEST_URL: "http://127.0.0.1:5000/"
  CI_REGISTRY_IMAGE: "index.docker.io/dmitreykazin/course_attendance_app"
  IMAGE_TAG: $CI_REGISTRY_IMAGE:gitlab-latest

.deploy_template: &deploy_template
  tags:
    - localcompose
    - localdocker
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - bash ./deploy.sh "$STAGE"

.docker_template: &docker_template
  image: docker:latest
  services:
    - docker:dind

health_test:
  <<: *docker_template
  tags:
    - localdocker
    - localcompose
  stage: test
  script:
    - docker-compose up -d
    - sleep 15
    - HTTP_STATUS=$(curl -o /dev/null -s -w "%{http_code}\n" $HEALTH_TEST_URL)
    - docker-compose down
    - if [ $HTTP_STATUS -eq 200 ]; then echo SUCCES; else echo FAIL && exit 1; fi

lint_test:
  image: python:3.10-slim
  stage: test
  before_script:
    - pip install flake8-html
  script:
    - flake8 --format=html --htmldir=flake_reports/ || true
  artifacts:
    when: always
    paths:
      - flake_reports/

build:
  <<: *docker_template
  stage: build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $IMAGE_TAG -f Dockerfile-flask .
    - docker push $IMAGE_TAG

deploy_staging:
  <<: *deploy_template
  stage: deploy_staging
  environment:
    name: staging
  variables:
    SSH_KEY: $SSH_KEY_STAGING
    STAGE: staging

deploy_production:
  <<: *deploy_template
  stage: deploy_production
  environment:
    name: production
  variables:
    SSH_KEY: $SSH_KEY_PROD
    STAGE: production
  only:
    - main
